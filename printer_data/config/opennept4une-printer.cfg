#----------------------------------------------------------------------------
#      ____                _  __         __  ____              
#     / __ \___  ___ ___  / |/ /__ ___  / /_/ / /__ _____  ___ 
#    / /_/ / _ \/ -_) _ \/    / -_) _ \/ __/_  _/ // / _ \/ -_)
#    \____/ .__/\__/_//_/_/|_/\__/ .__/\__/ /_/ \_,_/_//_/\__/ 
#        /_/                    /_/                            
#----------------------------------------------------------------------------
;   Neptune 4 Series Custom Image by (OpenNeptune3D/OpenNept4une):
#----------------------------------------------------------------------------
; Wiki    : https://github.com/OpenNeptune3D/OpenNept4une/wiki
; Discord : https://discord.com/invite/X6kwchT6WM

#############################################################################
#   External Config Includes
#############################################################################
# [include cartographer.cfg]
# [include mainsail.cfg]          ; mainsail runs on port 81 (http://IP_ADDRESS:81)
[include fluidd.cfg]
[include KAMP_Settings.cfg]
# [include ./KAMP/Smart_Park.cfg]
# [include ./KAMP/Line_Purge.cfg]
#[include klipper_debug.cfg]
#[include adxl.cfg]             ; Comment this out when you disconnect the Pico/MellowFly
[include user_settings.cfg]     ; Users custom macros 
[include Neptune4Stock_tmc.cfg]

#############################################################################
#   Base Config
#############################################################################

[mcu]
serial: /dev/ttyS0 ; The hardware use USART1 PA10/PA9 connect to RK3328
baud: 250000
restart_method: command

[printer]
kinematics:cartesian
max_velocity: 350
max_accel: 6500 #20000
max_z_velocity: 25 #8
max_z_accel: 120
square_corner_velocity: 9.0 #5.0
minimum_cruise_ratio: 0.0

[respond]
[gcode_arcs]
[pause_resume]
[display_status]
[exclude_object]
[firmware_retraction]
[virtual_sdcard]
path: ~/printer_data/gcodes
[force_move]
enable_force_move : True
[idle_timeout]
timeout: 2100                  ; 35min idle timeout (when not paused or printing)

#############################################################################
#   Print Start & End Macros
#############################################################################
[gcode_macro PRINT_START]   
variable_small_print: False
gcode:
    {% set FILAMENT_TYPE = params.FILAMENT_TYPE|default("PLA")|upper %}
    # Frame_Light_ON
    # M220 S100 ;Set the feed speed to 100%
    # M221 S100 ;Set the flow rate to 100%
    SET_DOCKABLE_PROBE AUTO_ATTACH_DETACH=0
    G92 E0 
    G90                       ; Use absolute coordinates
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    BED_MESH_CLEAR

    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
    {% set BED_MESH = params.BED_MESH|default('adaptive')|string %} ; One of: adaptive (default), full, default (or any other value as the bed mesh profile name), none
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

    {% set area_start = params.AREA_START|default('0,0')|string %}
    {% set area_end = params.AREA_END|default('0,0')|string %}
    
    {% set start_coords = area_start.split(',')|map('float')|list %}
    {% set end_coords = area_end.split(',')|map('float')|list %}    

    {% set center_min_x = 62.5 %}                                             ; define centre area bounds
    {% set center_min_y = 62.5 %}
    {% set center_max_x = 172.5 %}
    {% set center_max_y = 172.5 %}

    ; Check if print is within center area
    {% if start_coords[0] >= center_min_x and start_coords[1] >= center_min_y and end_coords[0] <= center_max_x and end_coords[1] <= center_max_y %}
      SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=True
      RESPOND TYPE=command MSG='Heating small bed'
    {% else %}                                                               ; print extends beyond center, set temperatures for both beds
      SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=small_print VALUE=False 
      RESPOND TYPE=command MSG='Heating large bed'
    {% endif %}

    SET_BED_TEMPERATURE TARGET={BED_TEMP}                           ; Heat Bed to target temp
    BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}  ; Waits until the bed reaches close to target
    RESPOND TYPE=command MSG='Bed Temp Reached, Beginning Scan'

    # CLEAN_NOZZLE FILAMENT_TYPE={FILAMENT_TYPE}                      ; Clean nozzle

    #CUSTOM SETTINGS BELOW   
    CG28
    ATTACH_PROBE                             
    # M109 S150                                                       ; Heat nozzle to 150c for touch
    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
    # RESPOND TYPE=command MSG='Nozzle at 150c'

    {% if BED_MESH == 'full' %}
    BED_MESH_CALIBRATE
    {% elif BED_MESH == 'adaptive' %}
    BED_MESH_CALIBRATE ADAPTIVE=1
    {% elif BED_MESH != 'none' %}
    BED_MESH_PROFILE LOAD={BED_MESH}
    {% endif %}
    # CARTOGRAPHER_TOUCH
    SKEW_PROFILE LOAD=CaliFlower
    G92 E0                                                          ; Reset Extruder
    DETACH_PROBE
    SET_DOCKABLE_PROBE AUTO_ATTACH_DETACH=1
    # G91
    # G1 Z10.0 F3000
    Smart_Park
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    # SET_BED_TEMPERATURE TARGET={BED_TEMP}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}   ; Set and heat the final extruder temperature
    # BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}  ; Wait for extruder to reach near target temperature
    # Part_Light_ON
    
    # Đoạn này custom ở trong slicer
    # LINE_PURGE                                                      ; KAMP Line Purge near print
    # G92 E0                                                          ; Reset Extruder
    # G1 Z2.0 F3000                                                   ; Move Z Axis up 
    # M220 S100       
       
[gcode_macro PRINT_END]
gcode:
    # Frame_Light_OFF
    Part_Light_OFF
    M400                    ; wait for buffer to clear
    SET_SKEW CLEAR=1
    TURN_OFF_HEATERS
    G92 E0                  ; zero the extruder
    G91                     ; Relative positioning
    G1 E-2 F2700            ; Retract a bit
    G1 X5 Y5 F3000          ; Wipe out
    G1 E-2 Z0.2 F1600       ; Retract and raise Z
    G1 Z15 F3000             ; Raise Z more
    G90                     ; Absolute positioning
    G1 X25 Y220              ; Present print
    M107                    ; turn off fan
    M84                     ; turn off steppers
    # M84 X Y E ;Disable all steppers but Z
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M104 S0                                                             ;Turn-off hotend
    M140 S0 
    M117
    CLEAR_ACTIVE_SPOOL
    # END_TUNE                ; Print End Beeper Jingle

#############################################################################
#   Pause, Resume & Cancel Macros
#############################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  # PAUSE_TUNE
  {% set z = params.Z|default(30)|int %}                                                   ; z hop amount 30mm
  {% if printer['pause_resume'].is_paused|int == 0 %}
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
      SAVE_GCODE_STATE NAME=PAUSE                                                          ; save the current print position for resume, before z-hop
      BASE_PAUSE                                                                           ; pause print
      G91                                                                           
      {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
          G1 E-2 F2700                                                                     ; Retract 2mm
          G1 X3 Y3 F3000                                                                   ; Wipe out 
          G1 E-2 Z{z} F1600                                                                ; Retract 2mm more & raise z by z hop amount 
          SAVE_GCODE_STATE NAME=ZLIFT                                                      ; save the current print position for resume, after z-hop
      {% else %}
          { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
          SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
          G1 E-2 F2700                                                                     ; Retract 2mm
          G1 X3 Y3 F3000                                                                   ; Wipe out 
          G1 E-2 F1600                                                                     ; Retract 2mm more
          SAVE_GCODE_STATE NAME=ZLIFT
      {% endif %}
      G90
      G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y} F6000     ; park toolhead at the rear left of the bed
      SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save the parked position
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160                                    ; cool down hotend to no-drip temp
      SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set idle timeout to 12 hours (in seconds)
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  {% if printer['pause_resume'].is_paused|int == 1 %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                           ; enable filament sensor
      SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}   ; set timeout back to configured value
      {% if etemp > 0 %}
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}  ; wait for hotend to heat back up to print temp
      {% endif %}
      RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                      ; go back to park position in case toolhead was moved during pause                                                                        ; enable extruder stepper motor
      G91                                                                           ; relative positioning
      M83                                                                           ; set extruder to relative mode
      G1 E55  F200                                                                  ; extrude 55mm of filament to prime the nozzle
      G4 P2000                                                                      ; wait for 2 seconds to stabilise pressure
      G1 X20 F15000                                                                 ; wiggle movement to ensure free movement of purge
      G1 X-20
      G1 X20
      G1 X-20
      G1 X20
      G1 X-20
      RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60                           ; restore to the zlift position above the print
      G1 X-3 Y-3 F3000                                                              ; Undo the pause Wipe out 
      G1 Z{zhop * -1} F900  
      RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                           ; restore to the paused position (lowers to final print location)
      M400                                                                          ; wait for all moves to complete
      BASE_RESUME                                                                   ; resume print
  {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}      ; set timeout back to configured value
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT

#############################################################################
#   Filament Sensor & Change Macros
#############################################################################

[filament_switch_sensor filament_sensor]
pause_on_runout: True
insert_gcode:
  M117 Insert Detected
runout_gcode:
  M117 Runout Detected
  UNLOAD_FILAMENT
event_delay: 3.0
pause_delay: 1.0
switch_pin: PA12

[delayed_gcode DISABLE_FILAMENT_SENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro M600]
description: Pause for colour change
gcode:
  PAUSE
  UNLOAD_FILAMENT

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  25
variable_purge_distance:  30
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={200-4} MAXIMUM={200+40}
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 30 %}
  SAVE_GCODE_STATE NAME=load_state
  G91
  G92 E0
  G1 E{load_distance} F{max_velocity}          ; fast-load
  G1 E{purge_distance} F{speed}                ; purge
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  55
variable_purge_distance:  15
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={200-4} MAXIMUM={200+40}
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 30 %}
  SAVE_GCODE_STATE NAME=unload_state
  G91
  G92 E0
  G1 E{purge_distance} F{speed}                ; purge
  G1 E-{unload_distance} F{max_velocity}       ; fast-unload
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro DRY_FILAMENT]
variable_dry_time: 28800
variable_dry_temp: 65
gcode:
gcode:
  SET_BED_TEMPERATURE TARGET={dry_temp}                           ; Heat Bed to target temp
  BED_TEMPERATURE_WAIT MINIMUM={dry_temp-2} MAXIMUM={dry_temp+4}
  SET_IDLE_TIMEOUT TIMEOUT={dry_time}

#############################################################################
#   X/Y/Z Stepper Config
#############################################################################

[stepper_x]
step_pin: PC14
dir_pin: PC13
enable_pin: !PC15
microsteps: 16
rotation_distance:40
full_steps_per_rotation:200                  ; set to 400 for 0.9 degree stepper
endstop_pin: PC0
position_min: -5.6 #-6.5
position_endstop: -5.6 #-6.5
position_max: 240
homing_speed: 50
homing_retract_dist: 5
homing_positive_dir: false

[stepper_y]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB5
microsteps: 16
rotation_distance:40
full_steps_per_rotation:200                  ; set to 400 for 0.9 degree stepper
endstop_pin: PB8
position_min: -5 #-2
position_endstop: -5 #0
position_max: 230 #235
homing_speed:50
homing_retract_dist: 5
homing_positive_dir:false

[stepper_z]
step_pin: PC10
dir_pin: !PA15
enable_pin: !PC11
microsteps: 32
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_max: 268
position_min: -10 #-20
homing_speed: 8
homing_retract_dist: 0

#############################################################################
#   TMC Stepper-driver UART Config
#############################################################################

[tmc2209 stepper_x]
uart_pin: PB9
run_current: 1.2
interpolate: True
stealthchop_threshold: 999999
sense_resistor: 0.11

[tmc2209 stepper_y]
uart_pin: PD2
run_current: 1.2
interpolate: True
stealthchop_threshold: 999999
sense_resistor: 0.11

[tmc2209 stepper_z]
uart_pin: PC5
run_current: 0.8
interpolate: True
sense_resistor: 0.11

[tmc2209 extruder]
uart_pin: PC4
run_current: 0.9
interpolate: True
sense_resistor: 0.11

#############################################################################
#   Extruder Config
#############################################################################

[extruder]
step_pin:PA5
dir_pin:!PA6
enable_pin:!PA4
microsteps: 32
rotation_distance: 28.371 #28.888                     ; 31.4 Bondtech 5mm Drive Gears
gear_ratio: 52:10
full_steps_per_rotation: 200                  ; 200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
min_temp: 0
max_temp: 330
heater_pin: PA7
sensor_type:NTC 100K MGB18-104F39050L32
sensor_pin: PA1
max_power: 1
#control = pid
#pid_kp = 22.164
#pid_ki = 1.211
#pid_kd = 101.400
pressure_advance: 0.02725
pressure_advance_smooth_time: 0.02
max_extrude_cross_section: 5                  ; standard klipper default 4* (NozzleDiam^2)
instantaneous_corner_velocity: 5.0
max_extrude_only_distance: 100
max_extrude_only_velocity:45
max_extrude_only_accel:2000
step_pulse_duration:0.000002

[verify_heater extruder]
max_error: 120
check_gain_time: 30
hysteresis: 10
heating_gain: 2

#############################################################################
#   Bed Heater Config
#############################################################################

[heater_bed]
heater_pin:PB10
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA0
max_power: 1.0
#control = pid
#pid_kp = 66.814
#pid_ki = 2.043
#pid_kd = 546.203
min_temp: 0
max_temp: 120 

[verify_heater heater_bed]
max_error: 120
check_gain_time: 120
hysteresis: 10
heating_gain: 1

#####################################################################
#   Outer Bed Heater Config
#####################################################################

[heater_generic heater_bed_outer]
heater_pin:PC8
max_power:1.0
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin:PC2
control = pid
pid_kp = 73.454
pid_ki = 1.024
pid_kd = 1316.655
min_temp:0
max_temp:120

[verify_heater heater_bed_outer]    ; heating bed temperature tolerance configuration
max_error: 600                      ; maximum error
check_gain_time:120                 ; tolerance time
hysteresis: 10                      ; tolerance temperature
heating_gain: 1                     ; heating gain

[gcode_macro SET_BED_TEMPERATURE]   ; macros for innner & outer bed temperature depending on the print size
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}
    {% if not printer["gcode_macro PRINT_START"].small_print %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={params.TARGET}
    {% endif %}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode:
    {% if params.MINIMUM is defined and params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
      {% if not printer["gcode_macro PRINT_START"].small_print %}
        TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
      {% endif %}
    {% elif params.MINIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
      {% if not printer["gcode_macro PRINT_START"].small_print %}
        TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MINIMUM={params.MINIMUM}
      {% endif %}
    {% elif params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
      {% if not printer["gcode_macro PRINT_START"].small_print %}
        TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MAXIMUM={params.MAXIMUM}
      {% endif %}
    {% else %}
      RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
    {% endif %}

[gcode_macro M140]               ; redefine the existing M140
rename_existing: M99140
gcode:
    {% if params.S is defined %}
      SET_BED_TEMPERATURE TARGET={params.S|int}
    {% endif %}

[gcode_macro M141]
gcode:
    {% if params.S is defined %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={params.S|int}
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:    
    {% if params.S is defined %}
      SET_BED_TEMPERATURE TARGET={params.S|int}
      BED_TEMPERATURE_WAIT MINIMUM={(params.S|int)-2} MAXIMUM={(params.S|int)+4}
    {% endif %}

[gcode_macro M191]
gcode:
    {% if params.S is defined %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed_outer TARGET={params.S|int}
      TEMPERATURE_WAIT SENSOR="heater_generic heater_bed_outer" MINIMUM={(params.S|int)-2} MAXIMUM={(params.S|int)+4}
    {% endif %}

#############################################################################
#   Probe Config
#############################################################################

[bed_mesh]
zero_reference_position: 112.5, 112.5
speed: 150
horizontal_move_z: 15
# mesh_min: 25, 25 #22, 22
# mesh_max: 210, 210
mesh_min: 20, 25
mesh_max: 210, 211
probe_count: 11, 11 #20, 20
algorithm: bicubic

[dockable_probe]
#z_offset: 0 # bigger == closer to the bed
pin: ^PA11
x_offset: -23
y_offset: 22
speed: 10.0
samples: 2
samples_result: median 
sample_retract_dist: 2.0
samples_tolerance: 0.025
samples_tolerance_retries: 3
dock_position: -5,0
approach_position: 25,0
detach_position: 25,0,2
z_hop: 15
check_open_attach: True
attach_speed: 50.0
detach_speed: 50.0
travel_speed: 500.0
# pre_detach_gcode:
#   G1 Z30 F600

#############################################################################
#   LED Config
#############################################################################

# [output_pin Frame_Light]
# pin: PB7

# [output_pin Part_Light]
# pin: PC7

[output_pin Frame_Light]
pin: rpi:gpiochip2/gpio2

[output_pin Part_Light]
pin: rpi:gpiochip2/gpio15

[gcode_macro Frame_Light_ON]
gcode:
  SET_PIN PIN=Frame_Light VALUE=1

[gcode_macro Frame_Light_OFF]
gcode:
  SET_PIN PIN=Frame_Light VALUE=0

[gcode_macro Part_Light_ON]
gcode:
  SET_PIN PIN=Part_Light VALUE=1

[gcode_macro Part_Light_OFF]
gcode:
  SET_PIN PIN=Part_Light VALUE=0

#############################################################################
#   Beeper Config
#############################################################################

[pwm_cycle_time beeper]
pin: PA2
value: 0
shutdown_value: 0
cycle_time: 0.0005                                  ; Default PWM frequency: 2 kHz

[gcode_macro M300]
gcode:
    {% set S = params.S|default(2000)|int %}        ; Set frequency (S), default to 2 kHz if omitted or invalid
    {% set P = params.P|default(100)|int %}         ; Set duration (P), default to 100ms if omitted or invalid
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/S if S > 0 else 1 }       ; Activate the beeper at a 80% duty cycle
    G4 P{P}                                         ; Hold the beep for the specified duration
    SET_PIN PIN=beeper VALUE=0                      ; Turn off the beeper

[gcode_macro PAUSE_TUNE]
gcode:
    M300 S784 P300
    M300 S587 P600
    
[gcode_macro END_TUNE]
gcode:
    M300 S392 P250 
    M300 S494 P250 
    M300 S587 P250 
    M300 S523 P300 

#############################################################################
#   Fan & Temp Monitoring Config
#############################################################################

[fan]
pin: PC9

# [controller_fan heatbreak+mainboard_fan]
# pin: PA8
# fan_speed: 1
# idle_speed: 0.5 #0.5
# idle_timeout: 43200                                     ; 50% speed for 12h then OFF
# shutdown_speed: 1
# heater: extruder, heater_bed, heater_bed_outer
# stepper: stepper_x, stepper_y, stepper_z, extruder

[temperature_fan HOST_Extruder_FAN]
pin: PA8
max_power: 1.0
max_speed: 0.6
min_speed: 0.2
shutdown_speed: 1
sensor_type: temperature_combined 
sensor_list: extruder, heater_bed, heater_generic heater_bed_outer  #temperature_sensor Host, temperature_sensor extruder, temperature_sensor bed
control: watermark
target_temp: 60
max_delta: 5
min_temp: 0
max_temp: 250
maximum_deviation: 999
combination_method: max 

[delayed_gcode start_fan_at_idle_speed]
initial_duration: 5.                                ; 5s wait after boot
gcode:
  # Gcode Hack to trigger the mainboard fan from printer boot
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=1 ; bed heat to 1degC
  G4 P2000                                          ; wait 2s
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0 ; bed heat off

[temperature_sensor RockchipHost]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor STM32MCU]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 85

#############################################################################
#   Homing & Levelling Config/Macros
#############################################################################

[safe_z_home]
home_xy_position: 141.75, 97.05 #112.5, 112.5 #117.5, 94.61
speed: 400
z_hop: 15
z_hop_speed: 25 #5

[axis_twist_compensation]
calibrate_start_x: 30
calibrate_end_x: 210
calibrate_y: 117.5

[gcode_macro Axis_Twist_Comp_Tune]
gcode:    
      CG28
      AXIS_TWIST_COMPENSATION_CALIBRATE

[screws_tilt_adjust]
screw1: 54.75, 176.05 
screw1_name: rear left screw
screw2: 54.75, 5.05  
screw2_name: front left screw
screw3: 226.75, 5.05 
screw3_name: front right screw
screw4: 226.75, 176.05 
screw4_name: rear right screw
# screw1: 33, 176
# screw1_name: rear right screw
# screw2: 33, 6
# screw2_name: front right screw
# screw3: 203, 6
# screw3_name: front left screw
# screw4: 203, 176
# screw4_name: rear left screw
speed: 150
horizontal_move_z: 15
screw_thread: CW-M4

[gcode_macro Bed_Level_Screws_Tune]
gcode:
      BED_MESH_CLEAR
      # SET_BED_TEMPERATURE TARGET=60
      # BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
      CG28
      SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Probe_Z_Offset]
gcode:
      CG28
      PROBE_CALIBRATE
      # RESPOND TYPE=command MSG='Invalid Command with Cartographer'
      
[gcode_macro Auto_Full_Bed_Level]
gcode:
      RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
      BED_MESH_CLEAR
      # SET_BED_TEMPERATURE TARGET=60
      # BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
      CG28
      BED_MESH_CALIBRATE

#############################################################################
#   PID Tuning Macros
#############################################################################

[gcode_macro PID_Tune_EXTRUDER]
gcode:
  {% set temperature = params.TEMPERATURE|default(210) %}
  CG28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET={temperature}
  SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode:
  {% set temperature = params.TEMPERATURE|default(60) %}
  CG28
  M106 S255 ;Sets Print Fans to 100%
  PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
  SAVE_CONFIG
  
[gcode_macro PID_Tune_Outer_BED]
gcode:
  {% set temperature = params.TEMPERATURE|default(60) %}
  CG28
  M106 S255 ;Sets Print Fans to 100%
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={temperature} 	;Heats Inner Zone at the same time for better tuning 
  PID_CALIBRATE HEATER=heater_bed_outer TARGET={temperature}
  SAVE_CONFIG

#############################################################################
#   SPI Accelerometer Config
#############################################################################    
      
[mcu rpi] 
serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None
# spi_bus: spidev0.2

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     117.5, 110, 20

#############################################################################
#   Input Shaper Config
#############################################################################

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 53
shaper_type_y = 2hump_ei
shaper_freq_y = 67.4

#############################################################################

#############################################################################
#   Cartographer 3D
#############################################################################

# [scanner]
# serial: /dev/serial/by-id/usb-Cartographer_614e_110003800643564738333920-if00
# #adjust to suit your scanner 
# x_offset: 0                          
# #adjust for your offset
# y_offset: 22.89                         
# #adjust for your offset
# sensor: cartographer
# sensor_alt: carto
# backlash_comp: 0.02049

# [adxl345]
# cs_pin: scanner:PA3
# spi_bus: spi1

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     117.5, 110, 20

[skew_correction]


#############################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.131905, -0.087530, -0.044405, -0.023155, 0.001220, -0.018780, -0.017530, -0.056280, -0.091280, -0.148155, -0.204405
#*# 	-0.086280, -0.074405, -0.024405, -0.017530, -0.015030, -0.013155, -0.031905, -0.082530, -0.132530, -0.175655, -0.252530
#*# 	-0.083155, -0.043780, -0.025655, -0.009405, -0.011280, -0.015655, -0.032530, -0.061280, -0.115655, -0.170030, -0.222530
#*# 	-0.081280, -0.043155, -0.018780, 0.000595, 0.008720, 0.001220, -0.033155, -0.073780, -0.117530, -0.166905, -0.225655
#*# 	-0.081905, -0.043780, -0.015655, 0.008720, 0.012470, 0.003095, -0.025655, -0.068780, -0.108780, -0.149405, -0.183155
#*# 	-0.082530, -0.076905, -0.035030, -0.010655, 0.004970, -0.002530, -0.011905, -0.051280, -0.084405, -0.132530, -0.175655
#*# 	-0.092530, -0.049405, -0.014405, -0.015030, -0.006905, -0.002530, -0.006905, -0.040030, -0.085655, -0.140655, -0.201280
#*# 	-0.091280, -0.066905, -0.023155, -0.000655, 0.006220, 0.004970, -0.005030, -0.047530, -0.058155, -0.103780, -0.181280
#*# 	-0.124405, -0.086905, -0.041905, -0.031905, -0.009405, -0.026905, -0.018155, -0.043780, -0.071905, -0.110030, -0.166905
#*# 	-0.149405, -0.118155, -0.069405, -0.065030, -0.024405, -0.017530, -0.020655, -0.054405, -0.095030, -0.114405, -0.178780
#*# 	-0.158155, -0.139405, -0.093155, -0.072530, -0.046905, -0.015655, -0.048155, -0.055655, -0.055030, -0.113155, -0.152530
#*# x_count = 11
#*# y_count = 11
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 20.0
#*# max_x = 210.0
#*# min_y = 25.0
#*# max_y = 211.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.977
#*# pid_ki = 11.326
#*# pid_kd = 25.483
#*#
#*# [heater_bed]
#*# pid_version = 1
#*# pid_target = 60.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 68.111
#*# pid_ki = 1.879
#*# pid_kd = 617.257
#*#
#*# [heater_generic heater_bed_outer]
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = 0.0020100545507498145
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [dockable_probe]
#*# z_offset = 8.924
#*#
#*# [heater_bed_outer]
#*# pid_version = 1
#*# pid_target = 60.00
#*# pid_tolerance = 0.0200
#*# control = pid
#*# pid_kp = 64.705
#*# pid_ki = 0.943
#*# pid_kd = 1110.506
